import React, { useState, useEffect, useRef } from 'react';
import { StyleSheet, View, Text, Image, FlatList, TextInput, TouchableOpacity } from 'react-native';
import CourceCard from '../../components/CourceCard';
import LibrariesCard from '../../components/librariesCard';
import CourceData from "./data/CourceData.json";
import LibrariesData from "./data/LibrariesData.json";
import _ from 'lodash';
import { AntDesign } from '@expo/vector-icons'; // استيراد أيقونة البحث من مكتبة Expo Icons

const CoursePage = () => {
    const [searchQuery, setSearchQuery] = useState('');
    const [filteredCourceData, setFilteredCourceData] = useState(CourceData);
    const [filteredLibrariesData, setFilteredLibrariesData] = useState(LibrariesData);
    const debouncedSearch = useRef(_.debounce(query => handleSearch(query), 300)).current;

    useEffect(() => {
        debouncedSearch(searchQuery);
    }, [searchQuery]);

    const handleSearch = (query) => {
        const lowerCaseQuery = query.toLowerCase();

        const filteredCourses = CourceData.filter(item =>
            (item.title && item.title.toLowerCase().includes(lowerCaseQuery)) ||
            (item.description && item.description.toLowerCase().includes(lowerCaseQuery))
        );

        const filteredLibraries = LibrariesData.filter(item =>
            (item.lib && item.lib.toLowerCase().includes(lowerCaseQuery)) ||
            (item.des && item.des.toLowerCase().includes(lowerCaseQuery))
        );

        setFilteredCourceData(filteredCourses);
        setFilteredLibrariesData(filteredLibraries);
    };

    const renderHeader = () => (
        <View>
            <Image source={{ uri: "https://img-c.udemycdn.com/course/750x422/5612850_d997_3.jpg" }} style={styles.image} />
            <View style={styles.searchContainer}>
                <TextInput
                    style={styles.searchInput}
                    placeholder="Search"
                    placeholderTextColor="#333"
                    value={searchQuery}
                    onChangeText={text => setSearchQuery(text)}
                />
                <TouchableOpacity style={styles.searchButton} onPress={() => debouncedSearch(searchQuery)}>
                    <AntDesign name="search1" size={24} color="black" />
                </TouchableOpacity>
            </View>
            <Text style={styles.text}>Basic</Text>
            <FlatList
                data={filteredCourceData}
                renderItem={({ item }) => (
                    <View style={styles.cardContainer}>
                        <CourceCard
                            title={item.title}
                            url={item.url}
                            description={item.description}
                            videoUrl={item.videoUrl}
                        />
                    </View>
                )}
                keyExtractor={item => item.id}
                horizontal
                showsHorizontalScrollIndicator={false}
                contentContainerStyle={styles.horizontalFlatListContentContainer}
                keyboardShouldPersistTaps="handled" // تجنب إخفاء لوحة المفاتيح عند النقر على العناصر
            />
            <Text style={styles.text}>Libraries</Text>
        </View>
    );

    return (
        <FlatList
            ListHeaderComponent={renderHeader}
            data={filteredLibrariesData}
            renderItem={({ item }) => (
                <View style={styles.cardContainer}>
                    <LibrariesCard
                        url={item.url}
                        lib={item.lib}
                        des={item.des}
                        _id={item._id}
                        name={item.name}
                        videoUrl={item.videoUrl}
                    />
                </View>
            )}
            keyExtractor={item => item.id}
            contentContainerStyle={styles.flatListContentContainer}
            keyboardShouldPersistTaps="handled" // تجنب إخفاء لوحة المفاتيح عند النقر على العناصر
        />
    );
}

export default CoursePage;

const styles = StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#06024a',
        paddingHorizontal: 5,
        paddingVertical: 20,
    },
    text: {
        fontSize: 30,
        fontWeight: 'bold',
        color: '#FFFFFF',
        marginLeft: 10,
        marginVertical: 10,
    },
    image: {
        width: '100%',
        height: 200,
        borderRadius: 20,
        marginBottom: 10,
        resizeMode: 'cover',
        marginTop: 30,
    },
    cardContainer: {
        marginBottom: 10,
        marginHorizontal: 10,
    },
    flatListContentContainer: {
        paddingVertical: 10,
        backgroundColor: '#06024a',
    },
    horizontalFlatListContentContainer: {
        paddingVertical: 10,
    },
    searchContainer: {
        flexDirection: 'row',
        alignItems: 'center',
        justifyContent: 'space-between',
        marginHorizontal: 10,
        marginBottom: 10,
    },
    searchInput: {
        flex: 1,
        backgroundColor: 'rgba(255,255,255,0.5)',
        borderRadius: 10,
        paddingHorizontal: 10,
        color: '#333',
        height: 40,
    },
    searchButton: {
        backgroundColor: '#fff',
        padding: 10,
        borderRadius: 20,
        marginLeft: 10,
    },
});
